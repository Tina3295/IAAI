@model IAAI.Models.Admin

@{
    Layout = "~/Areas/CMS/Views/Shared/Back_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.InitDate)
    @Html.HiddenFor(model => model.Permission)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Account, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfilePicture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProfilePicture, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProfilePicture, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Permission, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="treecontainer">
            </div>
        </div>

        <div style="display:flex;justify-content:space-between">
            <div style="color:red">
                @ViewBag.Tip
            </div>
            <div>
                @Html.ActionLink("返回", "Index")
            </div>
        </div>
        <div class="col-12" style="margin-bottom:15px">
            <input type="submit" value="新增" class="btn btn-primary w-100" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        // prettier-ignore
        let data = @Html.Raw(ViewBag.tree);

        let tree = new Tree('.treecontainer', {
            data: data,
            closeDepth: 3,
            loaded: function () {
                this.values = ['0-0-0', '0-1-1'];
                console.log(this.selectedNodes);
                console.log(this.values);
                this.disables = ['0-0-0', '0-0-1', '0-0-2']
            },
            onChange: function () {
                console.log(this.values);
                $("#Permission").val(this.values)
            }
        })
    </script>
}
